- name: Create Tickstack volume Directories
  file:
    name: "{{ item }}"
    state: directory
  loop:
    - "{{ docker_influxdb.volume  }}"
    - "{{ docker_chronograf.volume }}"
    - "{{ docker_kapacitor.volume }}"
    - "{{ docker_telegraf.volume }}"
  run_once: true

- name: Update telegraf config file
  template:
    src: telegraf.conf.j2
    dest: "{{ docker_telegraf.volume }}/telegraf.conf"
  run_once: true

- name: Deploy the monitoring service stack
  docker_stack:
        state: present
        name: tickstack
        compose:
          - version: "3.7"
            services:
              influxdb:
                image: "{{ docker_influxdb.image }}"
                volumes:
                  - type: bind
                    source: "{{ docker_influxdb.volume }}"
                    target: /var/lib/influxdb
                networks:
                  - tickstacknet
              telegraf:
                image: "{{ docker_telegraf.image }}"
                hostname: "{% raw %}{{ .Node.Hostname }}{% endraw %}"
                deploy:
                  mode: global
                volumes:
                  - "/:/hostfs:ro"
                  - "/etc:/hostfs/etc:ro"
                  - "/proc:/hostfs/proc:ro"
                  - "/sys:/hostfs/sys:ro"
                  - "/var/run/utmp:/var/run/utmp:ro"
                  - "/var/run/docker.sock:/var/run/docker.sock:ro"
                  - "{{ docker_telegraf.volume }}/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
                networks:
                    - tickstacknet
                environment:
                    HOST_ETC: /hostfs/etc
                    HOST_PROC: /hostfs/proc
                    HOST_SYS: /hostfs/sys
                    HOST_MOUNT_PREFIX: /hostfs
              chronograf:
                image: "{{ docker_chronograf.image }}"
                ports: 
                  - "8888:8888"
                volumes:
                  - type: bind
                    source: "{{ docker_chronograf.volume }}"
                    target: /var/lib/chronograf
                networks:
                    - tickstacknet
              kapacitor:
                image: "{{ docker_kapacitor.image }}"
                volumes:
                  - type: bind
                    source: "{{ docker_kapacitor.volume }}"
                    target: /var/lib/kapacitor
                environment:
                  KAPACITOR_INFLUXDB_0_URLS_0: http://influxdb:8086
                networks:
                    - tickstacknet
            networks:
                tickstacknet:
  run_once: true
