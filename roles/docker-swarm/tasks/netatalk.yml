- name: Copy netatalk build files to build node
  copy: 
    src: netatalk/
    dest: netatalk
    mode: preserve

- name: Build the netatalk image and push it to the private repo
  docker_image:
    build:
      path: netatalk
      pull: yes
    name: "{{ docker_netatalk.image }}"
    push: yes
    source: build
    force_source: yes
  run_once: true

- name: Add label to bulk storage nodes
  docker_node:
    hostname: "{{ item }}"
    labels:
      storagetype: bulk
  loop: "{{ groups.BulkStorage }}"
  run_once: true
  
- name: Create secret with the netatalk filesystem user
  docker_secret:
    name: netatalk-user
    data: "{{ docker_netatalk.user }}:{{ users[docker_netatalk.user].password }}"
    state: present
  run_once: true

- name: Get info on netatalk-swarm network
  docker_network_info:
    name: netatalk-swarm
  register: netatalkSwarmInfo
  run_once: true

# docker_network module doesn't supprt --config-from (2.8) so create manually
- name: Create netatalk-swarm network
  when: not netatalkSwarmInfo.exists
  command: "docker network create -d macvlan --scope swarm --config-from netatalk-config netatalk-swarm"
  run_once: true

- name: Create netatalk volume directory
  file:
    name: "{{ docker_netatalk.volume }}/{{ item }}"
    owner: "{{ docker_netatalk.user }}"
    state: directory
  loop: 
    - share
    - timemachine
  run_once: true

- name: Deploy netatalk service
  docker_stack:
    state: present
    name: netatalk
    compose:
      - version: "3.7"
        services:
          netatalk:
            image: "{{ docker_netatalk.image }}"
            hostname: swarm-netatalk
            environment:
              AFP_USER: "{{ docker_netatalk.user }}"
              AFP_UID: "{{ users[docker_netatalk.user].id }}"
              AFP_GID: "{{ users[docker_netatalk.user].id }}"
            ports:
                - 548:548
                - 5353:5353
            volumes:
              - source: "{{ docker_netatalk.volume }}"
                target: /media
                type: bind
            networks:
              - netatalk_net
            secrets:
              - source: netatalk-user
                target: netatalk_passwd
            deploy:
              restart_policy:
                condition: any
              placement:
                constraints:
                  - node.labels.storagetype == bulk
        networks:
          netatalk_net:
            external: true
            name: netatalk-swarm
        secrets:
          netatalk-user:
            external: true
  run_once: true