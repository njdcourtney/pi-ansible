- name: Pre-pull netatalk image
  docker_image:
    source: pull
    name: "{{ docker_netatalk.image }}"

- name: Add label to bulk storage nodes
  when: "'ClusterLeader' in group_names" 
  docker_node:
    hostname: "{{ item }}"
    labels:
      storagetype: bulk
  loop: "{{ groups.BulkStorage }}"
  run_once: true
  
- name: Create secret with the filesystem user
  when: "'ClusterLeader' in group_names" 
  docker_secret:
    name: netatalk-user
    data: "{{ docker_netatalk.user }}:{{ users[docker_netatalk.user].password }}"
    state: present
  register: netatalk_secret
  run_once: true

# Create the networks
- name: Get info on netatalk-config network
  docker_network_info:
    name: netatalk-config
  register: netatalkConfigInfo

# docker_network module doesn't supprt --config-only (2.8) so create manually
- name: Create netatalk-config network
  when: not netatalkConfigInfo.exists
  command: "docker network create -d macvlan --config-only --subnet=192.168.0.0/24 --ip-range=192.168.0.192/32 --gateway=192.168.0.1 -o parent=eth0 netatalk-config" 

- name: Get info on netatalk-swarm network
  when: "'ClusterLeader' in group_names" 
  docker_network_info:
    name: netatalk-swarm
  register: netatalkSwarmInfo
  run_once: true

# docker_network module doesn't supprt --config-from (2.8) so create manually
- name: Create netatalk-swarm network
  when: 
    - "'ClusterLeader' in group_names"
    - not netatalkSwarmInfo.exists
  command: "docker network create -d macvlan --scope swarm --config-from netatalk-config netatalk-swarm"
  run_once: true

- name: Create Volume Directories
  file:
    name: "{{ item.value }}"
    owner: "{{ docker_netatalk.user }}"
    state: directory
  loop: "{{ docker_netatalk.volumes | dict2items }}"
  run_once: true

- name: Install afp.conf file
  template:
    src: afp.conf.j2
    dest: "{{ docker_volume_root }}/netshare/config/afp.conf"
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  run_once: true

- name: Deploy netatalk service
  when: "'ClusterLeader' in group_names"
  docker_swarm_service:
    name: netatalk
    image: "{{ docker_netatalk.image }}"
    hostname: swarm-netatalk
    env:
      - "AFP_USER={{ docker_netatalk.user }}"
      - "AFP_UID={{ users[docker_netatalk.user].id }}"
      - "AFP_GID={{ users[docker_netatalk.user].id }}"
    publish: 
        - published_port: 548
          target_port: 548
        - published_port: 5353
          target_port: 5353
    mounts:
      - source: "{{ docker_netatalk.volumes.shared }}"
        target: /media/share
        type: bind
      - source: "{{ docker_netatalk.volumes.timemachine }}"
        target: /media/timemachine
        type: bind
      - source: "{{ docker_volume_root }}/netshare/config/afp.conf"
        target: /usr/local/etc/afp.conf
        type: bind
        readonly: true
    networks:
      - netatalk-swarm
    secrets:
      - secret_id: "{{ netatalk_secret.secret_id}}"
        secret_name: netatalk-user
        filename: netatalk_passwd
    restart_config:
      condition: any
    placement:
      constraints:
        - "node.labels.storagetype==bulk"
  run_once: true
