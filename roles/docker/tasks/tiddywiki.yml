- name: Create Tiddywiki volume Directories
  file:
    name: "{{ docker_volumes_dir }}/tiddywiki"
    state: directory

- name: Copy build files to build node
  copy: 
    src: Tiddywiki/
    dest: Tiddywiki
    mode: preserve
  register: docker_tiddywiki_dockerfile

- name: Clean out any images if the Dockerfile has changes
  when: docker_tiddywiki_dockerfile.changed
  docker_image:
    name: njdcourtney/pi-hive
    state: absent
    force_absent: yes

- name: Build the image
  docker_image:
    build:
      path: Tiddywiki
      pull: yes
      nocache: yes
    name: njdcourtney/pi-tiddywiki
    push: no
    source: build
  register: docker_tiddywiki_build

- name: Log into Docker Hub
  when: docker_tiddywiki_build.changed
  docker_login:
    username: "{{ vault_docker_hub.username }}"
    password: "{{ vault_docker_hub.password }}"
  notify: Docker-Hub-Logout

- name: Push the image
  when: docker_tiddywiki_build.changed
  docker_image:
    name: njdcourtney/pi-tiddywiki
    push: yes
    source: local

- name: Stop service if doing a forced update
  when: tiddywiki_force_creds_update is defined and tiddywiki_force_creds_update
  docker_swarm_service:
    name: "tiddywiki_{{ item.key }}"
    state: absent
  loop: "{{tiddywikis | dict2items }}"

- name: Delete the secret if doing a forced update
  when: tiddywiki_force_creds_update is defined and tiddywiki_force_creds_update
  docker_secret:
    name: tiddywiki-credentials
    state: absent

- name: Create the tiddywiki-credentials secret
  docker_secret:
    name: tiddywiki-credentials
    data: "{{ tiddywiki_creds }}"
    state: present

- name: Deploy Tiddywiki service
  docker_swarm_service:
    name: "tiddywiki_{{ item.key }}"
    image: njdcourtney/pi-tiddywiki
    resolve_image: true
    publish: 
        - published_port: "{{ item.value }}"
          target_port: 8090
    mounts:
      - type: bind
        source: "{{ docker_volumes_dir }}/tiddywiki"
        target: /var/lib/tiddlywiki
    env:
      WIKI_NAME: "{{ item.key }}"
    secrets:
      - secret_name: tiddywiki-credentials
    restart_config:
      condition: on-failure
  loop: "{{tiddywikis | dict2items }}"

