- name: Copy netatalk build files to build node
  copy: 
    src: netatalk/
    dest: netatalk
    mode: preserve

- name: Build the netatalk image and push it to the private repo
  docker_image:
    build:
      path: netatalk
      pull: yes
    name: "{{ docker_netatalk.image }}"
    push: yes
    source: build
    force_source: yes

- name: Add label to bulk storage nodes
  docker_node:
    hostname: "{{ item }}"
    labels:
      storagetype: bulk
  loop: "{{ groups.BulkStorage }}"
  
- name: Create secret with the netatalk filesystem user
  docker_secret:
    name: netatalk-user
    data: "{{ docker_netatalk.user }}:{{ users[docker_netatalk.user].password }}"
    state: present
  register: netatalk_secret
  run_once: true

- name: Get info on netatalk-swarm network
  docker_network_info:
    name: netatalk-swarm
  register: netatalkSwarmInfo
  run_once: true

# docker_network module doesn't supprt --config-from (2.8) so create manually
- name: Create netatalk-swarm network
  when: not netatalkSwarmInfo.exists
  command: "docker network create -d macvlan --scope swarm --config-from netatalk-config netatalk-swarm"
  run_once: true

- name: Create netatalk volume directory
  file:
    name: "{{ docker_netatalk.volume }}/{{ item }}"
    owner: "{{ docker_netatalk.user }}"
    state: directory
  loop: 
    - share
    - timemachine
  run_once: true

- name: Deploy netatalk service
  docker_swarm_service:
    name: netatalk
    image: "{{ docker_netatalk.image }}"
    hostname: swarm-netatalk
    env:
      - "AFP_USER={{ docker_netatalk.user }}"
      - "AFP_UID={{ users[docker_netatalk.user].id }}"
      - "AFP_GID={{ users[docker_netatalk.user].id }}"
    publish: 
        - published_port: 548
          target_port: 548
        - published_port: 5353
          target_port: 5353
    mounts:
      - source: "{{ docker_netatalk.volume }}"
        target: /media
        type: bind
    networks:
      - netatalk-swarm
    secrets:
      - secret_id: "{{ netatalk_secret.secret_id}}"
        secret_name: netatalk-user
        filename: netatalk_passwd
    restart_config:
      condition: any
    placement:
      constraints:
        - "node.labels.storagetype==bulk"
  run_once: true
